name: CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  workflow_dispatch: {}
  schedule:
    - cron: '0 3 * * *'   # daily smoke run

env:
  OPENAI_MODEL: gpt-4
  MAX_TOKENS: '5000000'
  MAX_ATTEMPTS: '5'

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: '3.12'
          cache: 'pip'

      - name: Create dirs
        run: mkdir -p diagnostics csv_output

      - name: Install dependencies
        run: pip install -e '.[dev]'

      - name: Run pre-commit
        run: pre-commit run --all-files --show-diff-on-failure
        env:
          GIT_ASKPASS: "true"

      # Static analysis
      - name: Run linters
        id: lint
        continue-on-error: true
        run: |
          ruff check . | tee diagnostics/lint.txt
          black --check . | tee -a diagnostics/lint.txt

      - name: Run mypy
        id: mypy
        continue-on-error: true
        run: |
          PYTHONPATH=src mypy --explicit-package-bases src/statement_refinery | tee diagnostics/mypy.txt

      # First pass
      - name: Run tests
        id: tests
        continue-on-error: true
        run: |
          pytest -v --cov=statement_refinery \
                 --cov-report=xml \
                 --cov-report=term-missing \
                 --cov-fail-under=90 | tee diagnostics/test.txt

      - name: Check accuracy
        id: accuracy
        continue-on-error: true
        run: |
          python scripts/check_accuracy.py --threshold 99 \
                 --summary-file diagnostics/accuracy.json \
                 --csv-dir csv_output | tee diagnostics/accuracy.txt

      # Auto-patch if needed
      - name: Run auto-patch
        id: evolve
        if: |
          (steps.lint.outcome == 'failure' ||
           steps.tests.outcome == 'failure' ||
           steps.accuracy.outcome == 'failure') &&
          github.event_name != 'pull_request'
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          GITHUB_TOKEN: ${{ secrets.BOT_PAT }}
        run: |
          git config --global user.name "Evolve Bot"
          git config --global user.email "bot@example.com"
          python .github/tools/evolve.py | tee diagnostics/evolve.txt

      # Re-run if patched
      - name: Re-run checks
        if: steps.evolve.outcome == 'success'
        run: |
          ruff check .
          black --check .
          mypy src/
          pytest -v --cov=statement_refinery \
                 --cov-report=xml \
                 --cov-report=term-missing \
                 --cov-fail-under=90
          python scripts/check_accuracy.py --threshold 99

      # Artifacts
      - name: Upload coverage
        if: always()
        uses: codecov/codecov-action@v4
        with:
          file: coverage.xml
          fail_ci_if_error: true
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}

      - name: Upload diagnostics
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: diagnostics
          path: diagnostics/

      - name: Upload CSVs
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: csvs
          path: csv_output/

      # Summary
      - name: Generate summary
        if: always()
        run: python scripts/ci_summary.py

